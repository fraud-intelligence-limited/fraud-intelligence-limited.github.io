import{_ as s,o as n,c as a,Q as e}from"./chunks/framework.c4d6cd72.js";const h=JSON.parse('{"title":"Retrieving peer limit state","description":"","frontmatter":{},"headers":[],"relativePath":"api-specification/peer-controller/retrieving-peer-limit-state.md","filePath":"api-specification/peer-controller/retrieving-peer-limit-state.md"}'),l={name:"api-specification/peer-controller/retrieving-peer-limit-state.md"},t=e(`<h1 id="retrieving-peer-limit-state" tabindex="-1">Retrieving peer limit state <a class="header-anchor" href="#retrieving-peer-limit-state" aria-label="Permalink to &quot;Retrieving peer limit state&quot;">​</a></h1><blockquote><p>Retrieves the limit state of the <a href="./../auth-controller/authorizing-a-user-in-the-system.html">authorized FIB user</a> at the time of the request.</p></blockquote><p><strong>Protocol</strong>: <code>HTTP</code></p><p><strong>Encoding</strong>: <code>JSON</code></p><p><strong>Endpoint</strong>: <code>/data/api/v1/peer-management/limit</code></p><p><strong>Method</strong>: <code>GET</code></p><p><strong>Header</strong>: <code>Authorization</code> — represented by a <code>string</code> that is the <code>accessToken</code> value that was returned either at the authorization, or the previous time the token <a href="./../auth-controller/refreshing-authentication-tokens.html">has been refreshed</a>.</p><h4 id="input-request-structure" tabindex="-1">Input/request structure <a class="header-anchor" href="#input-request-structure" aria-label="Permalink to &quot;Input/request structure&quot;">​</a></h4><p>A <code>GET</code> request to the endpoint with the <code>Authorization</code> header specified.</p><h4 id="output-response-structure" tabindex="-1">Output/response structure <a class="header-anchor" href="#output-response-structure" aria-label="Permalink to &quot;Output/response structure&quot;">​</a></h4><details class="details custom-block"><summary>Show</summary><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-410QD" id="tab-tXB4-DY" checked="checked"><label for="tab-tXB4-DY">Structure</label><input type="radio" name="group-410QD" id="tab-SG4aw60"><label for="tab-SG4aw60">Example</label></div><div class="blocks"><div class="language-json5 vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">integer($int</span><span style="color:#79B8FF;">32</span><span style="color:#FDAEB7;font-style:italic;">)</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;string&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">data</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">used</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">integer($int</span><span style="color:#79B8FF;">32</span><span style="color:#FDAEB7;font-style:italic;">)</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">total</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">integer($int</span><span style="color:#79B8FF;">32</span><span style="color:#FDAEB7;font-style:italic;">)</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">updatePeriod</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">integer($int</span><span style="color:#79B8FF;">64</span><span style="color:#FDAEB7;font-style:italic;">)</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">nextUpdate</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">integer($int</span><span style="color:#79B8FF;">64</span><span style="color:#FDAEB7;font-style:italic;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">status</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">code</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">integer($int</span><span style="color:#005CC5;">32</span><span style="color:#B31D28;font-style:italic;">)</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;string&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">data</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">used</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">integer($int</span><span style="color:#005CC5;">32</span><span style="color:#B31D28;font-style:italic;">)</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">total</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">integer($int</span><span style="color:#005CC5;">32</span><span style="color:#B31D28;font-style:italic;">)</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">updatePeriod</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">integer($int</span><span style="color:#005CC5;">64</span><span style="color:#B31D28;font-style:italic;">)</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">nextUpdate</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">integer($int</span><span style="color:#005CC5;">64</span><span style="color:#B31D28;font-style:italic;">)</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;Ok&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">data</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">used</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//The number of tokens spent by the requesting peer during their existence</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">total</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">100</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//The total token limit allocated to the requesting peer</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">updatePeriod</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">10</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">//The time period of how often the requesting peer&#39;s token balance is updated</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">nextUpdate</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1704442062</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">//The</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">exact</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">time</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">(ISO</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">8601</span><span style="color:#FDAEB7;font-style:italic;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">\`YYYY-MM-DDTHH:MM:SSZ\`)</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">of</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">when</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">the</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">next</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">token</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">balance</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">update</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">is</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">scheduled</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">for</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">status</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">code</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;Ok&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">data</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">used</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//The number of tokens spent by the requesting peer during their existence</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">total</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">100</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//The total token limit allocated to the requesting peer</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">updatePeriod</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">10</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">//The time period of how often the requesting peer&#39;s token balance is updated</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">nextUpdate</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1704442062</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">//The</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">exact</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">time</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">(ISO</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">8601</span><span style="color:#B31D28;font-style:italic;">:</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">\`YYYY-MM-DDTHH:MM:SSZ\`)</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">of</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">when</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">the</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">next</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">token</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">balance</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">update</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">is</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">scheduled</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">for</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div></details><h3 id="responses" tabindex="-1">Responses <a class="header-anchor" href="#responses" aria-label="Permalink to &quot;Responses&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">Response Code</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>200</code></td><td>Peer&#39;s limit state has been retrieved successfully.</td></tr><tr><td style="text-align:center;"><code>404</code></td><td>Metadata key not found or Trigger&#39;s period not specified.</td></tr><tr><td style="text-align:center;"><code>401</code></td><td><code>accessToken</code> is either expired or invalid.</td></tr><tr><td style="text-align:center;"><code>500</code></td><td>Internal server error.</td></tr></tbody></table>`,13),o=[t];function p(c,r,i,y,E,d){return n(),a("div",null,o)}const F=s(l,[["render",p]]);export{h as __pageData,F as default};
