import{_ as s,o as e,c as a,Q as t}from"./chunks/framework.c4d6cd72.js";const h=JSON.parse('{"title":"Logging a user out of the system","description":"","frontmatter":{},"headers":[],"relativePath":"api-specification/auth-controller/logging-a-user-out-of-the-system.md","filePath":"api-specification/auth-controller/logging-a-user-out-of-the-system.md"}'),n={name:"api-specification/auth-controller/logging-a-user-out-of-the-system.md"},o=t(`<h1 id="logging-a-user-out-of-the-system" tabindex="-1">Logging a user out of the system <a class="header-anchor" href="#logging-a-user-out-of-the-system" aria-label="Permalink to &quot;Logging a user out of the system&quot;">​</a></h1><blockquote><p>Signs out the <a href="./../auth-controller/authorizing-a-user-in-the-system.html">authorized FIB user</a> from the FIB API server.</p></blockquote><p><strong>Protocol</strong>: <code>HTTP</code></p><p><strong>Encoding</strong>: <code>JSON</code></p><p><strong>Endpoint</strong>: <code>/auth/api/v1/authentication-management/logout</code></p><p><strong>Method</strong>: <code>POST</code></p><p><strong>Header</strong>: <code>Authorization</code> — represented by a <code>string</code> that is the <code>accessToken</code> value that was returned either at the authorization, or the previous time the token <a href="./refreshing-authentication-tokens.html">has been refreshed</a>.</p><h4 id="input-request-structure" tabindex="-1">Input/request structure <a class="header-anchor" href="#input-request-structure" aria-label="Permalink to &quot;Input/request structure&quot;">​</a></h4><p>A <code>POST</code> request to the endpoint with the <code>Authorization</code> header specified.</p><h4 id="output-response-structure" tabindex="-1">Output/response structure <a class="header-anchor" href="#output-response-structure" aria-label="Permalink to &quot;Output/response structure&quot;">​</a></h4><details class="details custom-block"><summary>Show</summary><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-hc8HW" id="tab-Gs3CA4k" checked="checked"><label for="tab-Gs3CA4k">Structure</label><input type="radio" name="group-hc8HW" id="tab-eh3IpuU"><label for="tab-eh3IpuU">Example</label></div><div class="blocks"><div class="language-json5 vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#FDAEB7;font-style:italic;">integer($int</span><span style="color:#79B8FF;">32</span><span style="color:#FDAEB7;font-style:italic;">)</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;string&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">data</span><span style="color:#E1E4E8;">: {}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">status</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">code</span><span style="color:#24292E;">: </span><span style="color:#B31D28;font-style:italic;">integer($int</span><span style="color:#005CC5;">32</span><span style="color:#B31D28;font-style:italic;">)</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;string&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">data</span><span style="color:#24292E;">: {}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><div class="language-json5 vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json5</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">status</span><span style="color:#E1E4E8;">: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">code</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#9ECBFF;">name</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;OK&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">data</span><span style="color:#E1E4E8;">: {}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">status</span><span style="color:#24292E;">: {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">code</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">200</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#032F62;">name</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;OK&#39;</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">data</span><span style="color:#24292E;">: {}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div></div></div></details><h3 id="responses" tabindex="-1">Responses <a class="header-anchor" href="#responses" aria-label="Permalink to &quot;Responses&quot;">​</a></h3><table><thead><tr><th style="text-align:center;">Response Code</th><th>Description</th></tr></thead><tbody><tr><td style="text-align:center;"><code>200</code></td><td>User has been successfully logged out.</td></tr><tr><td style="text-align:center;"><code>400</code></td><td>Bad request.</td></tr><tr><td style="text-align:center;"><code>401</code></td><td>Either user signature or <code>refreshToken</code> are not valid, or the <code>accessToken</code> bearer token could not be parsed from the <code>Authorization</code> header.</td></tr><tr><td style="text-align:center;"><code>404</code></td><td>User has not been found.</td></tr><tr><td style="text-align:center;"><code>422</code></td><td>User signature either could not be decoded or verified, or the <code>publicKey</code> string is not valid.</td></tr><tr><td style="text-align:center;"><code>500</code></td><td>Internal server error.</td></tr></tbody></table>`,13),l=[o];function p(r,c,i,d,u,E){return e(),a("div",null,l)}const g=s(n,[["render",p]]);export{h as __pageData,g as default};
